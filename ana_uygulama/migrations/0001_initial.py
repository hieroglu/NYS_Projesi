# Generated by Django 5.2.1 on 2025-05-28 13:18

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Carrier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255, verbose_name='Adı Soyadı / Firma Ünvanı')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefon Numarası')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-posta Adresi')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Adres')),
                ('account_type', models.CharField(choices=[('SAHIS', 'Şahıs Şirketi/Esnaf'), ('SIRKET', 'Tüzel Kişi (Ltd, A.Ş. vb.)')], default='SAHIS', max_length=10, verbose_name='Hesap Tipi')),
                ('tax_office', models.CharField(blank=True, max_length=100, null=True, verbose_name='Vergi Dairesi')),
                ('tax_id_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Vergi Numarası / TC Kimlik No')),
                ('tax_plate_document', models.FileField(blank=True, null=True, upload_to='carrier_documents/tax_plates/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png'])], verbose_name='Vergi Levhası')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Taşıyıcı (Araç Sahibi)',
                'verbose_name_plural': 'Taşıyıcılar (Araç Sahipleri)',
                'ordering': ['full_name'],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Firma Adı')),
                ('company_type', models.CharField(choices=[('FABRIKA', 'Fabrika'), ('NAKLIYECI', 'Nakliyeci')], max_length=10, verbose_name='Firma Tipi')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Adres')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefon')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-posta')),
            ],
            options={
                'verbose_name': 'Firma',
                'verbose_name_plural': 'Firmalar',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(max_length=100, verbose_name='Banka Adı')),
                ('branch_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Şube Adı')),
                ('account_holder_name', models.CharField(max_length=255, verbose_name='Hesap Sahibi Adı')),
                ('iban', models.CharField(max_length=34, unique=True, verbose_name='IBAN Numarası')),
                ('account_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Hesap Numarası')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Birincil Hesap mı?')),
                ('carrier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_accounts', to='ana_uygulama.carrier', verbose_name='Taşıyıcı (Araç Sahibi)')),
            ],
            options={
                'verbose_name': 'Banka Hesabı',
                'verbose_name_plural': 'Banka Hesapları',
                'ordering': ['carrier', '-is_primary', 'bank_name'],
            },
        ),
        migrations.AddField(
            model_name='carrier',
            name='managed_by_shipper',
            field=models.ForeignKey(limit_choices_to={'company_type': 'NAKLIYECI'}, on_delete=django.db.models.deletion.CASCADE, related_name='managed_carriers', to='ana_uygulama.company', verbose_name='Yöneten Nakliyeci Firma'),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ana_uygulama.company', verbose_name='Bağlı Olduğu Firma')),
            ],
            options={
                'verbose_name': 'Kullanıcı',
                'verbose_name_plural': 'Kullanıcılar',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(max_length=50, unique=True, verbose_name='Fatura Numarası')),
                ('invoice_type', models.CharField(choices=[('E_FATURA', 'E-Fatura'), ('E_ARSIV', 'E-Arşiv Faturası')], max_length=10, verbose_name='Fatura Tipi')),
                ('issue_date', models.DateField(default=django.utils.timezone.now, verbose_name='Düzenlenme Tarihi')),
                ('due_date', models.DateField(verbose_name='Vade Tarihi')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Tutar')),
                ('vat_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='KDV Tutarı')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Toplam Tutar')),
                ('status', models.CharField(choices=[('DRAFT', 'Taslak'), ('SENT', 'Gönderildi'), ('PAID', 'Ödendi'), ('PARTIALLY_PAID', 'Kısmen Ödendi'), ('VOID', 'İptal Edildi')], default='DRAFT', max_length=20, verbose_name='Durum')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('billed_to_factory', models.ForeignKey(limit_choices_to={'company_type': 'FABRIKA'}, on_delete=django.db.models.deletion.PROTECT, related_name='invoices_to_factory', to='ana_uygulama.company', verbose_name='Faturalanan Fabrika')),
                ('issued_by_shipper', models.ForeignKey(limit_choices_to={'company_type': 'NAKLIYECI'}, on_delete=django.db.models.deletion.PROTECT, related_name='invoices_from_shipper', to='ana_uygulama.company', verbose_name='Faturayı Kesen Nakliyeci')),
            ],
            options={
                'verbose_name': 'Fatura',
                'verbose_name_plural': 'Faturalar',
                'ordering': ['-issue_date'],
            },
        ),
        migrations.CreateModel(
            name='QuoteRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin', models.CharField(max_length=255, verbose_name='Yükleme Yeri (Çıkış)')),
                ('destination', models.CharField(max_length=255, verbose_name='Teslimat Yeri (Varış)')),
                ('load_description', models.TextField(verbose_name='Yük Açıklaması (Cinsi, Ağırlığı, Hacmi vb.)')),
                ('requested_pickup_date', models.DateField(verbose_name='Talep Edilen Yükleme Tarihi')),
                ('status', models.CharField(choices=[('PENDING', 'Beklemede'), ('QUOTED', 'Fiyat Verildi'), ('ACCEPTED', 'Kabul Edildi'), ('REJECTED', 'Reddedildi'), ('COMPLETED', 'Tamamlandı (İşe Dönüştü)')], default='PENDING', max_length=20, verbose_name='Durum')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Son Güncellenme Tarihi')),
                ('offered_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Teklif Edilen Fiyat (Nakliyeci)')),
                ('shipper_notes', models.TextField(blank=True, null=True, verbose_name='Nakliyeci Notları')),
                ('created_by_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quote_requests_created', to=settings.AUTH_USER_MODEL, verbose_name='Oluşturan Kullanıcı')),
                ('factory', models.ForeignKey(limit_choices_to={'company_type': 'FABRIKA'}, on_delete=django.db.models.deletion.CASCADE, related_name='quote_requests_as_factory', to='ana_uygulama.company', verbose_name='Talep Eden Fabrika')),
                ('priced_by_shipper_company', models.ForeignKey(blank=True, limit_choices_to={'company_type': 'NAKLIYECI'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='given_quotes', to='ana_uygulama.company', verbose_name='Fiyat Veren Nakliyeci Firma')),
            ],
            options={
                'verbose_name': 'Fiyat Teklifi Talebi',
                'verbose_name_plural': 'Fiyat Teklifi Talepleri',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Shipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin', models.CharField(max_length=255, verbose_name='Yükleme Yeri')),
                ('destination', models.CharField(max_length=255, verbose_name='Teslimat Yeri')),
                ('load_description', models.TextField(verbose_name='Yük Açıklaması')),
                ('pickup_date', models.DateField(verbose_name='Yükleme Tarihi')),
                ('delivery_date', models.DateField(blank=True, null=True, verbose_name='Teslim Tarihi')),
                ('price_for_factory', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Fabrikaya Fiyat')),
                ('cost_for_shipper', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Nakliyeciye Maliyet (Taşıyıcıya Ödenen)')),
                ('status', models.CharField(choices=[('PENDING_ASSIGNMENT', 'Atama Bekliyor'), ('ASSIGNED', 'Taşıyıcıya Atandı'), ('IN_TRANSIT', 'Yolda'), ('DELIVERED', 'Teslim Edildi'), ('BILLED', 'Faturalandırıldı'), ('CANCELLED', 'İptal Edildi')], default='PENDING_ASSIGNMENT', max_length=20, verbose_name='Durum')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('created_by_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shipments_created', to=settings.AUTH_USER_MODEL, verbose_name='Oluşturan Nakliyeci Kullanıcı')),
                ('factory', models.ForeignKey(limit_choices_to={'company_type': 'FABRIKA'}, on_delete=django.db.models.deletion.PROTECT, related_name='shipments_as_customer_factory', to='ana_uygulama.company', verbose_name='Müşteri Fabrika')),
                ('quote_request', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ana_uygulama.quoterequest', verbose_name='İlişkili Fiyat Teklifi')),
                ('shipper_company', models.ForeignKey(limit_choices_to={'company_type': 'NAKLIYECI'}, on_delete=django.db.models.deletion.PROTECT, related_name='shipments_managed_by_shipper', to='ana_uygulama.company', verbose_name='Nakliyeci Firma')),
            ],
            options={
                'verbose_name': 'İş / Sevkiyat',
                'verbose_name_plural': 'İşler / Sevkiyatlar',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('direction', models.CharField(choices=[('INCOMING', 'Tahsilat (Gelen)'), ('OUTGOING', 'Ödeme (Giden)')], max_length=10, verbose_name='Ödeme Yönü')),
                ('counterparty_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Karşı Taraf Adı (Serbest Metin)')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Tutar')),
                ('payment_date', models.DateField(default=django.utils.timezone.now, verbose_name='Ödeme Tarihi')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('counterparty_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments_with_counterparty', to='ana_uygulama.company', verbose_name='Karşı Taraf Firma (Fabrika/Diğer)')),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ana_uygulama.invoice', verbose_name='İlişkili Fatura')),
                ('recorded_by_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Kaydeden Kullanıcı')),
                ('shipper_company', models.ForeignKey(limit_choices_to={'company_type': 'NAKLIYECI'}, on_delete=django.db.models.deletion.PROTECT, related_name='payments_by_shipper', to='ana_uygulama.company', verbose_name='İşlem Yapan Nakliyeci')),
                ('shipment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ana_uygulama.shipment', verbose_name='İlişkili Sevkiyat (Masraf/Taşıyıcı)')),
            ],
            options={
                'verbose_name': 'Ödeme/Tahsilat Kaydı',
                'verbose_name_plural': 'Ödeme/Tahsilat Kayıtları',
                'ordering': ['-payment_date'],
            },
        ),
        migrations.AddField(
            model_name='invoice',
            name='shipment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ana_uygulama.shipment', verbose_name='İlişkili Sevkiyat'),
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plate_number', models.CharField(max_length=20, unique=True, verbose_name='Plaka Numarası')),
                ('driver_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Şoför Adı Soyadı (Eğer Sahibi Değilse)')),
                ('driver_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Şoför Telefonu')),
                ('license_document', models.FileField(blank=True, null=True, upload_to='vehicle_documents/licenses/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png'])], verbose_name='Araç Ruhsatı')),
                ('insurance_document', models.FileField(blank=True, null=True, upload_to='vehicle_documents/insurances/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png'])], verbose_name='Trafik Sigortası (PDF/Resim)')),
                ('driver_license_document', models.FileField(blank=True, null=True, upload_to='driver_documents/licenses/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png'])], verbose_name='Şoför Ehliyeti (PDF/Resim)')),
                ('license_expiry_date', models.DateField(blank=True, null=True, verbose_name='Taşıt Kartı Bitiş Tarihi')),
                ('insurance_expiry_date', models.DateField(blank=True, null=True, verbose_name='Sigorta Bitiş Tarihi')),
                ('inspection_expiry_date', models.DateField(blank=True, null=True, verbose_name='Muayene Bitiş Tarihi')),
                ('carrier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='ana_uygulama.carrier', verbose_name='Araç Sahibi (Taşıyıcı)')),
            ],
            options={
                'verbose_name': 'Araç',
                'verbose_name_plural': 'Araçlar',
                'ordering': ['plate_number'],
            },
        ),
        migrations.AddField(
            model_name='shipment',
            name='assigned_vehicle',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ana_uygulama.vehicle', verbose_name='Atanan Araç'),
        ),
    ]
